{"ast":null,"code":"var _jsxFileName = \"/Users/aditichannashetti/PlannerPal/src/Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [post, setPost] = useState('');\n  const addPost = () => {\n    if (post.trim() === '') return alert(\"Post cannot be empty!\");\n    setPosts([...posts, post]);\n    setPost('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: post,\n      onChange: e => setPost(e.target.value),\n      placeholder: \"Write a blog post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPost,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: p\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"nXYtkBh0HqA6Rd5Bn1Wuy3Crd4E=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","post","setPost","addPost","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","p","i","_c","$RefreshReg$"],"sources":["/Users/aditichannashetti/PlannerPal/src/Blog.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Blog = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [post, setPost] = useState('');\r\n\r\n  const addPost = () => {\r\n    if (post.trim() === '') return alert(\"Post cannot be empty!\");\r\n    setPosts([...posts, post]);\r\n    setPost('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blog</h2>\r\n      <textarea\r\n        value={post}\r\n        onChange={(e) => setPost(e.target.value)}\r\n        placeholder=\"Write a blog post...\"\r\n      />\r\n      <button onClick={addPost}>Add</button>\r\n      <ul>\r\n        {posts.map((p, i) => <li key={i}>{p}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIF,IAAI,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAOC,KAAK,CAAC,uBAAuB,CAAC;IAC7DL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,IAAI,CAAC,CAAC;IAC1BC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbd,OAAA;MACEe,KAAK,EAAEV,IAAK;MACZW,QAAQ,EAAGC,CAAC,IAAKX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC;IAAsB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFd,OAAA;MAAQoB,OAAO,EAAEb,OAAQ;MAAAG,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtCd,OAAA;MAAAU,QAAA,EACGP,KAAK,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKvB,OAAA;QAAAU,QAAA,EAAaY;MAAC,GAALC,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxBID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}