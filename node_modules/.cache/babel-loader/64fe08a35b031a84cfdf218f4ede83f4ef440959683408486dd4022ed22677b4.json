{"ast":null,"code":"var _jsxFileName = \"/Users/aditichannashetti/PlannerPal/src/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [event, setEvent] = useState('');\n  const [time, setTime] = useState('');\n  const addEvent = () => {\n    if (event.trim() === '' || time.trim() === '') {\n      return alert(\"Event and time cannot be empty!\");\n    }\n    const timeObj = new Date(`1970-01-01T${time}`);\n    const formattedTime = timeObj.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n    setEvents([...events, {\n      event,\n      time: formattedTime\n    }]);\n    setEvent('');\n    setTime('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: event,\n      onChange: e => setEvent(e.target.value),\n      placeholder: \"Event name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: time,\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEvent,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [e.event, \" - \", e.time]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"KY2x4Z7WFsyS2fHgHnJc/tkxqSQ=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Schedule","_s","events","setEvents","event","setEvent","time","setTime","addEvent","trim","alert","timeObj","Date","formattedTime","toLocaleTimeString","hour","minute","hour12","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","type","onClick","map","i","_c","$RefreshReg$"],"sources":["/Users/aditichannashetti/PlannerPal/src/Schedule.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Schedule = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [event, setEvent] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const addEvent = () => {\r\n    if (event.trim() === '' || time.trim() === '') {\r\n      return alert(\"Event and time cannot be empty!\");\r\n    }\r\n    const timeObj = new Date(`1970-01-01T${time}`);\r\n    const formattedTime = timeObj.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\r\n    setEvents([...events, { event, time: formattedTime }]);\r\n    setEvent('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Schedule</h2>\r\n      <input\r\n        value={event}\r\n        onChange={(e) => setEvent(e.target.value)}\r\n        placeholder=\"Event name\"\r\n      />\r\n      <input\r\n        type=\"time\"\r\n        value={time}\r\n        onChange={(e) => setTime(e.target.value)}\r\n      />\r\n      <button onClick={addEvent}>Add</button>\r\n      <ul>\r\n        {events.map((e, i) => (\r\n          <li key={i}>{e.event} - {e.time}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIH,IAAI,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7C,OAAOC,KAAK,CAAC,iCAAiC,CAAC;IACjD;IACA,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAE,cAAaN,IAAK,EAAC,CAAC;IAC9C,MAAMO,aAAa,GAAGF,OAAO,CAACG,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;IAC1Gd,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEE,KAAK;MAAEE,IAAI,EAAEO;IAAc,CAAC,CAAC,CAAC;IACtDR,QAAQ,CAAC,EAAE,CAAC;IACZE,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACER,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MACEwB,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFvB,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXL,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFvB,OAAA;MAAQ8B,OAAO,EAAErB,QAAS;MAAAU,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCvB,OAAA;MAAAmB,QAAA,EACGhB,MAAM,CAAC4B,GAAG,CAAC,CAACL,CAAC,EAAEM,CAAC,kBACfhC,OAAA;QAAAmB,QAAA,GAAaO,CAAC,CAACrB,KAAK,EAAC,KAAG,EAACqB,CAAC,CAACnB,IAAI;MAAA,GAAtByB,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}