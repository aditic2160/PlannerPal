{"ast":null,"code":"var _jsxFileName = \"/Users/aditichannashetti/PlannerPal/src/BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPost = ({\n  title,\n  author,\n  content,\n  date,\n  comments,\n  onComment\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [commentAuthor, setCommentAuthor] = useState('');\n  const handleComment = () => {\n    if (newComment.trim() === '' || commentAuthor.trim() === '') return;\n    const comment = {\n      text: newComment,\n      author: commentAuthor\n    };\n    onComment(comment);\n    setNewComment('');\n    setCommentAuthor('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By: \", comment.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: commentAuthor,\n        onChange: e => setCommentAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a Comment\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleComment,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPost, \"TB6U8zoKFHDKeeAUkPWdLtiSQeA=\");\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BlogPost","title","author","content","date","comments","onComment","_s","newComment","setNewComment","commentAuthor","setCommentAuthor","handleComment","trim","comment","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/aditichannashetti/PlannerPal/src/BlogPost.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BlogPost = ({ title, author, content, date, comments, onComment }) => {\r\n  const [newComment, setNewComment] = useState('');\r\n  const [commentAuthor, setCommentAuthor] = useState('');\r\n\r\n  const handleComment = () => {\r\n    if (newComment.trim() === '' || commentAuthor.trim() === '') return;\r\n\r\n    const comment = { text: newComment, author: commentAuthor };\r\n    onComment(comment);\r\n    setNewComment('');\r\n    setCommentAuthor('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-post\">\r\n      <h2>{title}</h2>\r\n      <p>Author: {author}</p>\r\n      <p>Date: {date}</p>\r\n      <p>{content}</p>\r\n      <h3>Comments</h3>\r\n      <ul>\r\n        {comments.map((comment, index) => (\r\n          <li key={index}>\r\n            <p>{comment.text}</p>\r\n            <p>By: {comment.author}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"comment-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your Name\"\r\n          value={commentAuthor}\r\n          onChange={(e) => setCommentAuthor(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Add a Comment\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n        />\r\n        <button onClick={handleComment}>Comment</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}